#include "domstubs.idl"

#include "nsIDOMMediaStream.idl"
#include "nsIDOMDOMRequest.idl"
#include "nsIDOMFile.idl"

[scriptable, function, uuid(0978e9c2-99c4-4e01-a514-b8986c05e900)]
interface nsIB2GAutofocusCallback : nsISupports {
	void handleEvent();
};

[scriptable, function, uuid(01bf4c13-b5f4-4ff0-aa4c-7163ac7495f1)]
interface nsIB2GPictureCallback : nsISupports {
	void handleEvent(in nsIDOMBlob picture);
};


[scriptable, uuid(692652d7-9b65-4371-8611-6b01bbf96c80)]
interface nsIB2GCameraControl : nsISupports {
	void autofocus(in nsIB2GAutofocusCallback onsuccess, [optional] in nsIB2GAutofocusCallback onerror);

	void takePicture(in nsIB2GPictureCallback onsuccess, [optional] in nsIB2GPictureCallback onerror);

	[implicit_jscontext]
	jsval getParameter(in DOMString name);

	[implicit_jscontext]
	void setParameter(in DOMString name, in jsval value);

};

// will be exposed on the navigator object
[scriptable, uuid(01f8d6b1-1d52-4376-aee5-24b03c5649f6)]
interface nsIB2GMediaSupport : nsISupports
{
	// options will be used to specify the inital camera setup :
	// { camera: 1,   /* 0 .. getNumberOfCameras() */
	//   width:  640, /* preview width             */
	//   height: 480, /* preview height            */
	//   ... }
	[implicit_jscontext]
    nsIDOMMediaStream getCameraStream([optional] in jsval aOptions);

    [implicit_jscontext]
    unsigned long getNumberOfCameras();
};
